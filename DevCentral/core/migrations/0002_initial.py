# Generated by Django 5.1.7 on 2025-04-25 14:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='app',
            name='developer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='app',
            name='catogory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='apps', to='core.appcategory'),
        ),
        migrations.AddField(
            model_name='appimage',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_images', to='core.app'),
        ),
        migrations.AddField(
            model_name='app',
            name='images',
            field=models.ManyToManyField(blank=True, null=True, related_name='apps', to='core.appimage'),
        ),
        migrations.AddField(
            model_name='appreview',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_reviews', to='core.app'),
        ),
        migrations.AddField(
            model_name='appreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='app',
            name='reviews',
            field=models.ManyToManyField(blank=True, null=True, related_name='apps', to='core.appreview'),
        ),
        migrations.AddField(
            model_name='developerprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='download',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flag',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='program',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apps', to='core.category'),
        ),
        migrations.AddField(
            model_name='media',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='core.program'),
        ),
        migrations.AddField(
            model_name='flag',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='core.program'),
        ),
        migrations.AddField(
            model_name='download',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='core.program'),
        ),
        migrations.AddField(
            model_name='review',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.program'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='flag',
            unique_together={('user', 'program')},
        ),
        migrations.AlterUniqueTogether(
            name='download',
            unique_together={('user', 'program', 'downloaded_at')},
        ),
    ]
